{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ApiServise/ApiServise.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["Searchbar","props","useState","stateQuery","setStateQuery","reset","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","images","openModal","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","largeimageurl","ImageGallery","Button","Modal","useEffect","window","addEventListener","handleKeyDowm","removeEventListener","console","log","code","closeModal","currentTarget","API_OPTIONS","ApiServiseFetch","query","page","BASE_URL","API_KEY","IMAGE_TYPE","PER_PAGE","axios","get","propTypes","options","PropTypes","shape","number","isRequired","string","Spinner","this","class","color","height","width","React","Component","App","stateImages","setStateImages","statePage","setStatePage","stateShowModal","setStateShowModal","stateLargeimageurl","setStateLargeimageurl","stateIsLoading","setStateIsLoading","setTimeout","then","response","prevState","data","hits","finally","scrollToButton","scrollTo","top","document","documentElement","scrollHeight","behavior","searchQuery","getAttribute","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32451105.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Searchbar = props => {\r\n  const [stateQuery, setStateQuery] = useState('');\r\n\r\n  const onChangeQuery = e => {\r\n    setStateQuery(e.target.value);\r\n  };\r\n\r\n  // Передає query в state App\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onSubmit(stateQuery);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setStateQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={stateQuery}\r\n          onChange={onChangeQuery}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, openModal }) => {\r\n  return (\r\n    <>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li className=\"ImageGalleryItem\" key={id} onClick={openModal}>\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            largeimageurl={largeImageURL}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" >\r\n      <ImageGalleryItem images={images} openModal={openModal}/>\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = props => {\r\n  // Додає EventListener для відстеження натискання кнопок\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDowm);\r\n\r\n    // При розмонтуванні\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDowm);\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //Закриває модалку при натисканні кнопки Escape\r\n  const handleKeyDowm = e => {\r\n    console.log(e.code);\r\n    if (e.code === 'Escape') {\r\n      props.closeModal();\r\n    }\r\n  };\r\n\r\n  //Закриває модалку при кліку в оверлей\r\n  const handleClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      props.closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleClick}>\r\n      <div className=\"Modal\">\r\n        <img src={props.largeimageurl} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  largeimageurl: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst API_OPTIONS = {\r\n  BASE_URL: 'https://pixabay.com/api/',\r\n  API_KEY: '21804857-e4d02e1e62ab2bb6123c0439f',\r\n  IMAGE_TYPE: 'image_type=photo&orientation=horizontal',\r\n  PER_PAGE: 12,\r\n};\r\n\r\nconst ApiServiseFetch = (query, page) => {\r\n  const { BASE_URL, API_KEY, IMAGE_TYPE, PER_PAGE } = API_OPTIONS;\r\n  return axios.get(\r\n    `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&${IMAGE_TYPE}&per_page=${PER_PAGE}`,\r\n  );\r\n};\r\n\r\nApiServiseFetch.propTypes = {\r\n  options: PropTypes.shape({\r\n    query: PropTypes.number.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    BASE_URL: PropTypes.string.isRequired,\r\n    API_KEY: PropTypes.string.isRequired,\r\n    IMAGE_TYPE: PropTypes.string.isRequired,\r\n    PER_PAGE: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ApiServiseFetch;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class Spinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={this.props.class}\r\n        type=\"Circles\"\r\n        color=\"#3f51b5\"\r\n        height={200}\r\n        width={200}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport ApiServiseFetch from './components/ApiServise/ApiServise';\nimport Loader from './components/Loader/Loader';\n\nconst App = () => {\n  const [stateImages, setStateImages] = useState([]);\n  const [stateQuery, setStateQuery] = useState('');\n  const [statePage, setStatePage] = useState(1);\n  const [stateShowModal, setStateShowModal] = useState(false);\n  const [stateLargeimageurl, setStateLargeimageurl] = useState('');\n  const [stateIsLoading, setStateIsLoading] = useState(false);\n\n  // Приймає searchQuery з Searchbar і записує в query\n  const formSubmitHandler = searchQuery => {\n    setStateQuery(searchQuery);\n    setStatePage(1);\n    setStateImages([]);\n  };\n\n  useEffect(() => {\n    // setTimeout для того, щоб встиг показатися Loader\n    if (stateQuery === '') {\n      return;\n    }\n\n    //fetch\n    setStateIsLoading(true);\n    setTimeout(() => {\n      ApiServiseFetch(stateQuery, statePage)\n        .then(response => {\n          setStateImages(prevState => [...prevState, ...response.data.hits]);\n        })\n        .finally(\n          setStateIsLoading(false),\n          setTimeout(() => {\n            scrollToButton();\n          }, 500),\n        );\n    }, 400);\n  }, [stateQuery, statePage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Відкриття модалки\n  // setTimeout для того, щоб встиг показатися Loader\n  const openModal = e => {\n    setStateIsLoading(true);\n\n    setTimeout(() => {\n      setStateShowModal(true);\n      setStateLargeimageurl(e.target.getAttribute('largeimageurl'));\n      setStateIsLoading(false);\n    }, 300);\n  };\n\n  // Закриття модалки\n  const closeModal = () => {\n    setStateShowModal(false);\n    setStateLargeimageurl('');\n  };\n\n  const incremenpPage = () => {\n    setStatePage(prevState => prevState + 1);\n  };\n\n  // Автоскрол після fetch\n  const scrollToButton = () => {\n    if (statePage > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={formSubmitHandler} />\n      <ImageGallery openModal={openModal} images={stateImages} />\n      {stateImages.length > 0 && <Button onClick={incremenpPage}></Button>}\n      {stateShowModal && (\n        <Modal\n          closeModal={closeModal}\n          largeimageurl={stateLargeimageurl}\n        ></Modal>\n      )}\n      {stateIsLoading && <Loader class={'Loader'}></Loader>}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}